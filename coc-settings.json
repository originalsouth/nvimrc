{
  "coc.preferences.diagnostic.displayByAle": true,
  "languageserver": {
    "clangd": {
      "command": "clangd",
      "args": ["--background-index"],
      "rootPatterns": ["compile_flags.txt", "compile_commands.json", ".vim/", ".git/", ".hg/"],
      "filetypes": ["c", "cpp", "cuda", "objc", "objcpp"]
    },
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    "python": {
        "command": "python",
        "args": [
          "-mpyls",
          "-vv",
          "--log-file",
          "/tmp/lsp_python.log"
        ],
        "trace.server": "verbose",
        "filetypes": [ "python" ],
        "settings": {
          "pyls": {
            "enable": true,
            "trace": {
              "server": "verbose"
            },
            "commandPath": "",
            "configurationSources": [ "pycodestyle" ],
            "plugins": {
              "jedi_completion": { "enabled": true },
              "jedi_hover": { "enabled": true },
              "jedi_references": { "enabled": true },
              "jedi_signature_help": { "enabled": true },
              "jedi_symbols": { "enabled": true, "all_scopes": true },
              "mccabe": { "enabled": true, "threshold": 15 },
              "preload": { "enabled": true },
              "pycodestyle": { "enabled": false },
              "pydocstyle": { "enabled": false, "match": "(?!test_).*\\.py", "matchDir": "[^\\.].*" },
              "pyflakes": { "enabled": true },
              "pylint": { "enabled": false },
              "rope_completion": { "enabled": true },
              "yapf": { "enabled": true }
            }
          }
        }
      },
      "digestif": {
        "command": "digestif",
        "filetypes": ["tex", "plaintex", "context"]
      },
    "julia": {
      "command": "/usr/bin/julia",
      "args" : ["--startup-file=no", "--history-file=no", "-e","using LanguageServer;using Pkg;import StaticLint;import SymbolServer;env_path = dirname(Pkg.Types.Context().env.project_file);debug = false;server = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\", Dict());server.runlinter = true; run(server);"],
      "filetypes": ["julia"]
     }
  }
}
